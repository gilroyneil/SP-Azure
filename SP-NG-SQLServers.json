{
    "$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "ServiceName": {
            "type": "String"
        },
        "resourceLocation": {
            "type": "string"
        },
        "administratorAccount": {
            "type": "string"
        },
        "administratorPassword": {
            "type": "string"
        },
        "servicePassword": {
            "type": "string"
        },
        "domainJoinUserName": {
            "type": "string"
        },
        "domainJoinPassword": {
            "type": "string"
        },
        "domainJoinOU": {
            "type": "string"
        },
        "domainName": {
            "type": "string"
        },
        "domainNetBiosName": {
            "type": "string"
        },
        "VMSizeSQL": {
            "type": "string"
        },
                "virtualNetworkName": {
            "type": "string"
        },
        "virtualNetworkResourceGroup": {
            "type": "string"
        },
        "subnetSQLName": {
            "type": "string"
        }
        ,
        "numberSQLServers": {
            "type": "int"
        }
    },
    "variables":{
        
        "virtualNetworkResourceGroup":"[parameters('virtualNetworkResourceGroup')]",
        "virtualNetworkName":"[parameters('virtualNetworkName')]",
        "subnetSQLName":"[parameters('subnetSQLName')]",
        "resourceLocation":"[parameters('resourceLocation')]",
        "vnetID": "[resourceId(parameters('virtualNetworkResourceGroup'), 'Microsoft.ClassicNetwork/virtualNetworks', parameters('virtualNetworkName'))]",             
        "subnetSQLRef": "[concat(variables('vnetID'),'/subnets/', parameters('subnetSQLName'))]",
        
        "SQLDomainName":"[concat(parameters('ServiceName'),'-SQL')]",
        "StorageType":"Standard_LRS",
        "SQLHardware":"[parameters('vmSizeSQL')]",        
        "StorageName":"[concat(parameters('ServiceName'),'storage')]",    
        "VNetName":"[concat(parameters('ServiceName'),'VNet')]",    
        
         /*
        OLD Single Server code.
        "SQL1Name":"[concat(parameters('ServiceName'),'-sql1')]", 
        "SQL1Disk1Name":"[concat(parameters('ServiceName'),'-fSQL1-os')]",
        "SQL1Disk2Name":"[concat(parameters('ServiceName'),'-fSQL1-data1')]",
        "SQL1Disk3Name":"[concat(parameters('ServiceName'),'-fSQL1-data2')]",
        */
        "SQLName":"[concat(parameters('ServiceName'),'-sql')]",          
        "SQLDisk1Name":"[concat(parameters('ServiceName'),'-osadf1-sql')]",
        "SQLDisk2Name":"[concat(parameters('ServiceName'),'-datadf1-sql')]",
        "SQLDisk3Name":"[concat(parameters('ServiceName'),'-datadf2-sql')]",
        
        
        "SQLPrepareMachineModules":"\"xComputerManagement\",\"xNetworking\",\"xActiveDirectory\",\"xSQLServer_1.2.1.0\",\"xPendingReboot_0.1.0.2\",\"xSystemSecurity_1.0\"",        
        "DCImage": "a699494373c04fc0bc8f2bb1389d6106__Windows-Server-2012-R2-20150726-en.us-127GB.vhd",
        "SPImage": "a699494373c04fc0bc8f2bb1389d6106__Windows-Server-2012-R2-20150726-en.us-127GB.vhd",
        "SQLImage": "a699494373c04fc0bc8f2bb1389d6106__Windows-Server-2012-R2-20150726-en.us-127GB.vhd",
        
        "domainJoinCommand" : "[concat('powershell.exe -ExecutionPolicy Unrestricted -Command .\\JoinAD.ps1 -DomainName \"',parameters('domainName'),'\" -domainNetBiosName \"',parameters('domainNetBiosName'),'\" -DomainAdministratorUserName \"',parameters('domainJoinUserName'),'\" -DomainAdministratorPassword \"',parameters('domainJoinPassword'),'\" -DomainJoinOU \"',parameters('domainJoinOU'), '\" -ServiceUserName \"NGService\" -ServicePassword \"',parameters('servicePassword'), '\"')]",
   
           
                   
        "CreateSPCommand" : "[concat('powershell.exe -ExecutionPolicy Unrestricted -Command .\\CreateSPServer.ps1 -DomainName \"',parameters('domainName'),'\" -domainNetBiosName \"',parameters('domainNetBiosName'),'\" -DomainAdministratorUserName \"',parameters('administratorAccount'),'\" -DomainAdministratorPassword \"',parameters('administratorPassword'), '\" -ServiceUserName \"SQLService\" -ServicePassword \"',parameters('servicePassword'), '\"')]",
        "SetupSQLCommand" : "[concat('powershell.exe -ExecutionPolicy Unrestricted -Command .\\SetupSQL.ps1 -DomainNetBiosName \"',parameters('domainNetBiosName'),'\" -SQLServiceAccount \"SQLService\" -SQLServiceAccountPassword \"',parameters('servicePassword'), '\" -SQLAgentAccount \"SQLAgent\" -SQLAgentAccountPassword \"',parameters('servicePassword'), '\" -SQLDrive  \"F\"  -SetupAccount \"SPSetup\"')]",
        "SetupSPCommand" : "[concat('powershell.exe -ExecutionPolicy Unrestricted -Command .\\SetupSP.ps1 -DomainName \"',parameters('domainName'),'\" -domainNetBiosName \"',parameters('domainNetBiosName'),'\" -DomainAdministratorUserName \"',parameters('administratorAccount'),'\" -DomainAdministratorPassword \"',parameters('administratorPassword'), '\" -ServiceUserName \"SQLService\" -ServicePassword \"',parameters('servicePassword'), '\"')]"
            
    },
    "resources": [
         {
            "type": "Microsoft.ClassicStorage/StorageAccounts",
            "name": "[variables('StorageName')]",
            "apiVersion": "2014-06-01",
            "location": "[parameters('resourceLocation')]",
            "properties": {
                "accountType": "[variables('StorageType')]"
            }
        },
        /*{
            "type": "Microsoft.ClassicNetwork/virtualNetworks",
            "name": "[variables('VNetName')]",
            "apiVersion": "2014-06-01",
            "location": "[parameters('resourceLocation')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.1.0.0/26"
                    ]
                },
                "dhcpOptions": {
                    "dnsServers": [ "10.1.0.20" ]
                },
                "subnets": [
                    {
                        "name": "Subnet-SP",
                        "addressPrefix": "10.1.0.0/28"
                    },
                    {
                        "name": "Subnet-DC",
                        "addressPrefix": "10.1.0.16/28"
                    }
                ]
            }
        },*/
       /* {
            "type": "Microsoft.ClassicCompute/domainNames",
            "name": "[variables('DCDomainName')]",
            "apiVersion": "2014-06-01",
            "location": "[parameters('resourceLocation')]",
            "properties": {
                "label": "[variables('DCDomainName')]"
            }
        },*/
       
        {
            "type": "Microsoft.ClassicCompute/domainNames",
            "name": "[concat(variables('SQLDomainName'), copyindex())]",
            "apiVersion": "2014-06-01",
            "location": "[parameters('resourceLocation')]",
            "copy": {
                "name": "sqlServerLoopDomainName",
                "count": "[parameters('numberSQLServers')]"
            },
            "properties": {
                "label": "[concat(variables('SQLDomainName'), copyindex())]"
            }
        },
        
        
        {
            "type": "Microsoft.ClassicCompute/virtualMachines",
            "name": "[concat(variables('SQLName'), copyindex())]",      
            "apiVersion": "2014-06-01",
            "location": "[parameters('resourceLocation')]",
            "copy": {
                "name": "sqlServerLoop",
                "count": "[parameters('numberSQLServers')]"
            },
            "properties": {
                "domainName": {
                    "id": "[concat(resourceGroup().id, '/providers/Microsoft.ClassicCompute/domainNames/', variables('SQLDomainName'),copyindex() )]"
                },
                "networkProfile": {
                    "virtualNetwork": {
                        "id": "[variables('vnetID')]",
                        "subnetNames": [
                            "[parameters('subnetSQLName')]"
                        ]
                    },
                    "inputEndpoints": [
                         {
                            "enableDirectServerReturn": "False",
                            "endpointName": "Remote Desktop",
                            "privatePort": 3389,
                            "publicPort": "[concat('1234', copyindex())]",  
                            "protocol": "tcp"
                        },
                        {
                            "enableDirectServerReturn": "False",
                            "endpointName": "Powershell",
                            "privatePort": 5986,
                            "protocol": "tcp"
                        }
                    ]
                },
                "hardwareProfile": {
                    "size": "[variables('SQLHardware')]",
                    "platformGuestAgent": "true",
                    "availabilitySet": "[concat(variables('SQLName'),'-AvailSet')]"
                },
                "operatingSystemProfile": {
                    "computerName": "[concat(variables('SQLName'), copyindex())]",                      
                    "adminUserName": "[parameters('administratorAccount')]",
                    "adminPassword": "[parameters('administratorPassword')]",                   
                    "windowsOperatingSystemProfile": {
                        "winRMListeners": [
                            {
                                "protocol": "Https"
                            }
                        ]

                    }
                },
                "storageProfile": {
                    "operatingSystemDisk": {
                        "diskName": "[concat(variables('SQLDisk1Name'), copyindex())]",
                        /*"diskName": "[variables('SQL1Disk1Name')]",*/
                        "vhdUri": "[concat(reference(concat('Microsoft.ClassicStorage/storageAccounts/', variables('StorageName'))).endpoints[0], 'vhds/', parameters('ServiceName'), variables('SQLDisk1Name'),copyindex(),'.vhd')]",
                        "caching": "ReadWrite",
                        "sourceImageName": "[variables('SPImage')]"
                    },
                    "dataDisks": [
                        {
                            "diskName": "[concat(variables('SQLDisk2Name'), copyindex())]",
                            /*"diskName": "[variables('SQL1Disk2Name')]",*/
                            "caching": "None",
                            "diskSize": "50",
                            "lun": "0",
                            "vhdUri": "[concat(reference(concat('Microsoft.ClassicStorage/storageAccounts/', variables('StorageName'))).endpoints[0], 'vhds/', parameters('ServiceName'), variables('SQLDisk2Name'),copyindex(),'.vhd')]"
                        },
                        {
                            "diskName": "[concat(variables('SQLDisk3Name'), copyindex())]",
                            /*"diskName": "[variables('SQL1Disk3Name')]",*/
                            "caching": "None",
                            "diskSize": "50",
                            "lun": "1",
                            "vhdUri": "[concat(reference(concat('Microsoft.ClassicStorage/storageAccounts/', variables('StorageName'))).endpoints[0], 'vhds/', parameters('ServiceName'), variables('SQLDisk3Name'),copyindex(),'.vhd')]"
                        }
                    ]

                },
                "extensions": [
                    {
                        "extension": "BGInfo",
                        "publisher": "Microsoft.Compute",
                        "version": "1.*"
                    },
                    {
                        "extension": "CustomScriptExtension",
                        "publisher": "Microsoft.Compute",
                        "version": "1.*",
                        "parameters": {
                            "public": {
                                "fileUris":[  
                                   "https://armstorageacc.blob.core.windows.net/scripts/PrepareMachine.ps1",
                                   "https://armstorageacc.blob.core.windows.net/scripts/xComputerManagement.zip",
                                   "https://armstorageacc.blob.core.windows.net/scripts/xNetworking.zip",
                                   "https://armstorageacc.blob.core.windows.net/scripts/xActiveDirectory.zip",
                                   "https://armstorageacc.blob.core.windows.net/scripts/xSQLServer_1.2.1.0.zip",
                                   "https://armstorageacc.blob.core.windows.net/scripts/xSqlPs_1.1.3.1.zip",                                   
                                   "https://armstorageacc.blob.core.windows.net/scripts/azure-powershell.0.9.1.msi",
                                   "https://armstorageacc.blob.core.windows.net/scripts/xPendingReboot_0.1.0.2.zip",
                                   "https://armstorageacc.blob.core.windows.net/scripts/xSystemSecurity_1.0.zip"
                                ],
                                "commandToExecute": "[concat('powershell.exe -ExecutionPolicy Unrestricted -Command .\\PrepareMachine.ps1 -Modules ', variables('SQLPrepareMachineModules'),' -Force')]"
                            }
                        }
                    }

                ]
            },
            "dependsOn": [
               "[concat('Microsoft.ClassicCompute/domainNames/', variables('SQLDomainName'), copyindex())]",
                /*"[concat('Microsoft.ClassicNetwork/virtualNetworks/', variables('VNetName'))]",*/
                "[concat('Microsoft.ClassicStorage/storageAccounts/', variables('StorageName'))]"
            ]
        }
        
       
    ]
}