{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "ServiceName": {
            "type": "string"
        },
        "resourceLocation": {
            "type": "string"
        },
        "administratorAccount": {
            "type": "string"
        },
        "administratorPassword": {
            "type": "string"
        },
        "servicePassword": {
            "type": "string"
        },
        "domainJoinUserName": {
            "type": "string"
        },
        "domainJoinPassword": {
            "type": "string"
        },
        "domainJoinOU": {
            "type": "string"
        },
        "domainName": {
            "type": "string"
        },
        "domainNetBiosName": {
            "type": "string"
        },
        "VMSizeSQL": {
            "type": "string"
        },
                "virtualNetworkName": {
            "type": "string"
        },
        "virtualNetworkResourceGroup": {
            "type": "string"
        },
        "subnetSQLName": {
            "type": "string"
        }
        ,
        "numberSQLServers": {
            "type": "int"
        }
    },
    "variables":{
        
        "virtualNetworkResourceGroup":"[parameters('virtualNetworkResourceGroup')]",
        "virtualNetworkName":"[parameters('virtualNetworkName')]",
        "subnetSQLName":"[parameters('subnetSQLName')]",
        "resourceLocation":"[parameters('resourceLocation')]",
        
        
        "vnetID": "[resourceId(parameters('virtualNetworkResourceGroup'), 'Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",                        
        "subnetSQLRef": "[concat(variables('vnetID'),'/subnets/', parameters('subnetSQLName'))]",
    
    "publicIPAddressType":"Dynamic",
    "publicIPName": "SQLPUBLICIP",
        
        
        
        "nicNameSQL":"[concat(parameters('ServiceName'),'-SQLNIC')]",
        
        
        
        
        "SQLDomainName":"[concat(parameters('ServiceName'),'-SQL')]",
        "StorageType":"Standard_LRS",
        "SQLHardware":"[parameters('vmSizeSQL')]",        
        /*"StorageName":"[concat(parameters('ServiceName'),'storage')]",*/    
        "StorageName":"[concat(parameters('ServiceName'), toLower(uniqueString(deployment().name)))]",
        "VNetName":"[concat(parameters('ServiceName'),'VNet')]",    
        
         /*
        OLD Single Server code.
        "SQL1Name":"[concat(parameters('ServiceName'),'-sql1')]", 
        "SQL1Disk1Name":"[concat(parameters('ServiceName'),'-fSQL1-os')]",
        "SQL1Disk2Name":"[concat(parameters('ServiceName'),'-fSQL1-data1')]",
        "SQL1Disk3Name":"[concat(parameters('ServiceName'),'-fSQL1-data2')]",
        */
        "SQLName":"[concat(parameters('ServiceName'),'-sql')]",          
        "SQLDisk1Name":"[concat(parameters('ServiceName'),'-os-sql-', uniqueString(deployment().name))]",
        "SQLDisk2Name":"[concat(parameters('ServiceName'),'-data1-sql-', uniqueString(deployment().name))]",
        "SQLDisk3Name":"[concat(parameters('ServiceName'),'-data2-sql-', uniqueString(deployment().name))]",
        
        
        "SQLPrepareMachineModules":"\"xComputerManagement\",\"xNetworking\",\"xActiveDirectory\",\"xSQLServer_1.2.1.0\",\"xPendingReboot_0.1.0.2\",\"xSystemSecurity_1.0\"",        
        "DCImage": "a699494373c04fc0bc8f2bb1389d6106__Windows-Server-2012-R2-20150916-en.us-127GB.vhd",
        "SPImage": "a699494373c04fc0bc8f2bb1389d6106__Windows-Server-2012-R2-20150916-en.us-127GB.vhd",
        "SQLImage": "a699494373c04fc0bc8f2bb1389d6106__Windows-Server-2012-R2-20150916-en.us-127GB.vhd",
        
        
        "imagePublisher": "MicrosoftWindowsServer",
        "imageOffer": "WindowsServer",
        "imageSKU": "2012-Datacenter",
        "imageVersion": "latest",
        
        
        "domainJoinCommand" : "[concat('powershell.exe -ExecutionPolicy Unrestricted -Command .\\JoinAD.ps1 -DomainName \"',parameters('domainName'),'\" -domainNetBiosName \"',parameters('domainNetBiosName'),'\" -DomainAdministratorUserName \"',parameters('domainJoinUserName'),'\" -DomainAdministratorPassword \"',parameters('domainJoinPassword'),'\" -DomainJoinOU \"',parameters('domainJoinOU'), '\" -ServiceUserName \"NGService\" -ServicePassword \"',parameters('servicePassword'), '\"')]",
   
           
                   
        "CreateSPCommand" : "[concat('powershell.exe -ExecutionPolicy Unrestricted -Command .\\CreateSPServer.ps1 -DomainName \"',parameters('domainName'),'\" -domainNetBiosName \"',parameters('domainNetBiosName'),'\" -DomainAdministratorUserName \"',parameters('administratorAccount'),'\" -DomainAdministratorPassword \"',parameters('administratorPassword'), '\" -ServiceUserName \"SQLService\" -ServicePassword \"',parameters('servicePassword'), '\"')]",
        "SetupSQLCommand" : "[concat('powershell.exe -ExecutionPolicy Unrestricted -Command .\\SetupSQL.ps1 -DomainNetBiosName \"',parameters('domainNetBiosName'),'\" -SQLServiceAccount \"SQLService\" -SQLServiceAccountPassword \"',parameters('servicePassword'), '\" -SQLAgentAccount \"SQLAgent\" -SQLAgentAccountPassword \"',parameters('servicePassword'), '\" -SQLDrive  \"F\"  -SetupAccount \"SPSetup\"')]",
        "SetupSPCommand" : "[concat('powershell.exe -ExecutionPolicy Unrestricted -Command .\\SetupSP.ps1 -DomainName \"',parameters('domainName'),'\" -domainNetBiosName \"',parameters('domainNetBiosName'),'\" -DomainAdministratorUserName \"',parameters('administratorAccount'),'\" -DomainAdministratorPassword \"',parameters('administratorPassword'), '\" -ServiceUserName \"SQLService\" -ServicePassword \"',parameters('servicePassword'), '\"')]"
            
    },
    "resources": [
         {
            "type": "Microsoft.Storage/StorageAccounts",
            "name": "[variables('StorageName')]",
            "apiVersion": "2015-06-15",
            "location": "[parameters('resourceLocation')]",
            "properties": {
                "accountType": "[variables('StorageType')]"
            }
        },
        /*{
            "type": "Microsoft.ClassicNetwork/virtualNetworks",
            "name": "[variables('VNetName')]",
            "apiVersion": "2014-06-01",
            "location": "[parameters('resourceLocation')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.1.0.0/26"
                    ]
                },
                "dhcpOptions": {
                    "dnsServers": [ "10.1.0.20" ]
                },
                "subnets": [
                    {
                        "name": "Subnet-SP",
                        "addressPrefix": "10.1.0.0/28"
                    },
                    {
                        "name": "Subnet-DC",
                        "addressPrefix": "10.1.0.16/28"
                    }
                ]
            }
        },*/
       /* {
            "type": "Microsoft.ClassicCompute/domainNames",
            "name": "[variables('DCDomainName')]",
            "apiVersion": "2014-06-01",
            "location": "[parameters('resourceLocation')]",
            "properties": {
                "label": "[variables('DCDomainName')]"
            }
        },*/
     
         {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[concat(variables('publicIPName'),'-', copyindex())]",
      "location": "[parameters('resourceLocation')]",
           "copy": {
                "name": "spServerLoop",
                "count": "[parameters('numberSQLServers')]"
            },
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",      
      "name": "[concat(variables('nicNameSQL'),'-', copyindex())]",
      "location": "[parameters('resourceLocation')]",
       "copy": {
                "name": "spServerLoop",
                "count": "[parameters('numberSQLServers')]"
            },
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/',  variables('publicIPName'), '-', copyindex())]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses/', concat(variables('publicIPName'), '-', copyindex()))]"
              },
              "subnet": {
                "id": "[variables('subnetSQLRef')]"
              }
            }
          }
        ]
      }
    },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(variables('SQLName'), copyindex())]",      
            "apiVersion": "2015-06-15",
            "location": "[parameters('resourceLocation')]",
            "copy": {
                "name": "sqlServerLoop",
                "count": "[parameters('numberSQLServers')]"
            },
            "properties": {                
               "networkProfile": 
                   {
                       
                   "networkInterfaces": [
                            {                            
                            "id": "[resourceId('Microsoft.Network/networkInterfaces/', concat(variables('nicNameSQL'), '-', copyIndex()))]"
                            }
                        ],
          
                    
                    "inputEndpoints": [
                        {
                            "enableDirectServerReturn": "False",
                            "endpointName": "Remote Desktop",
                            "privatePort": 3389,
                            "publicPort": "[concat('1234', copyindex())]",  
                            "protocol": "tcp"
                        },
                        {
                            "enableDirectServerReturn": "False",
                            "endpointName": "Powershell",
                            "privatePort": 5986,
                            "protocol": "tcp"
                        }
                    ]
               },
                "hardwareProfile": {
                    "vmSize": "[variables('SQLHardware')]"
                },
                "osProfile": {
                    "computerName": "[concat(variables('SQLName'), copyindex())]",                      
                    "adminUserName": "[parameters('administratorAccount')]",
                    "adminPassword": "[parameters('administratorPassword')]"               
                    
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[variables('imageSKU')]",
                        "version": "[variables('imageVersion')]"
                    },
          
                    "osDisk": {
                        "name": "[concat(variables('SQLDisk1Name'), copyindex())]",
                        /*"diskName": "[variables('SQL1Disk1Name')]",*/
                        /*"vhdUri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('StorageName'))).endpoints[0], 'vhds/', parameters('ServiceName'), variables('SQLDisk1Name'),copyindex(),'.vhd')]",*/
                         "vhd":
                        {
                            "uri": "[concat('http://',variables('StorageName'),'.blob.core.windows.net/vhds/', parameters('ServiceName'), variables('SQLDisk1Name'),copyindex(),'.vhd')]"
                        },
    
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    },
                    "dataDisks": [
                        {
                            "name": "[concat(variables('SQLDisk2Name'), copyindex())]",
                            /*"diskName": "[variables('SQL1Disk2Name')]",*/
                            "caching": "None",
                            "diskSizeGB": "50",
                            "lun": "0",
                            /*"vhdUri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('StorageName'))).endpoints[0], 'vhds/', parameters('ServiceName'), variables('SQLDisk2Name'),copyindex(),'.vhd')]"*/
                             "vhd":
                            {
                                "uri": "[concat('http://',variables('StorageName'),'.blob.core.windows.net/vhds/', parameters('ServiceName'), variables('SQLDisk2Name'),copyindex(),'.vhd')]"
                            },
                            "createOption": "Empty"
                        },
                        {
                            "name": "[concat(variables('SQLDisk3Name'), copyindex())]",
                            /*"diskName": "[variables('SQL1Disk3Name')]",*/
                            "caching": "None",
                            "diskSizeGB": "50",
                            "lun": "1",
                            /*"vhdUri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('StorageName'))).endpoints[0], 'vhds/', parameters('ServiceName'), variables('SQLDisk3Name'),copyindex(),'.vhd')]"*/
                             "vhd":
                            {
                                "uri": "[concat('http://',variables('StorageName'),'.blob.core.windows.net/vhds/', parameters('ServiceName'), variables('SQLDisk3Name'),copyindex(),'.vhd')]"
                            },
                            "createOption": "Empty"
                        }
                    ]

                }
                
            },
            "dependsOn": [               
                /*"[concat('Microsoft.ClassicNetwork/virtualNetworks/', variables('VNetName'))]",*/
                "[concat('Microsoft.Storage/storageAccounts/', variables('StorageName'))]",                
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicNameSQL'), '-', copyIndex())]"
            ]
        },
        {
        "type": "Microsoft.Compute/virtualMachines/extensions",
        "name": "[concat(variables('SQLName'),copyindex(),'/SQLPrepareMachineModules')]",
        "apiVersion": "2015-06-15",
        "location": "[parameters('resourceLocation')]",
        "copy": {
                "name": "sqlServerLoop",
                "count": "[parameters('numberSQLServers')]"
            },
        "dependsOn": [
            "[concat('Microsoft.Compute/virtualMachines/', variables('SQLName'), copyindex())]"
        ],
        "properties": {
             "publisher": "Microsoft.Compute",
            "type": "CustomScriptExtension",
            "typeHandlerVersion": "1.4",
            "settings": {
             "fileUris":[  
                                   "https://armstorageacc.blob.core.windows.net/scripts/PrepareMachine.ps1",
                                   "https://armstorageacc.blob.core.windows.net/scripts/xComputerManagement.zip",
                                   "https://armstorageacc.blob.core.windows.net/scripts/xNetworking.zip",
                                   "https://armstorageacc.blob.core.windows.net/scripts/xActiveDirectory.zip",
                                   "https://armstorageacc.blob.core.windows.net/scripts/xSQLServer_1.2.1.0.zip",
                                   "https://armstorageacc.blob.core.windows.net/scripts/xSqlPs_1.1.3.1.zip",                                   
                                   "https://armstorageacc.blob.core.windows.net/scripts/azure-powershell.0.9.1.msi",
                                   "https://armstorageacc.blob.core.windows.net/scripts/xPendingReboot_0.1.0.2.zip",
                                   "https://armstorageacc.blob.core.windows.net/scripts/xSystemSecurity_1.0.zip"
                                ],
            "commandToExecute": "[concat('powershell.exe -ExecutionPolicy Unrestricted -Command .\\PrepareMachine.ps1 -Modules ', variables('SQLPrepareMachineModules'),' -Force')]"
            }
        }
        }
    
        
       
    ]
}